.SUFFIXES: .cxx .cu .o
.PHONY: docs

### CUDA path
CUDA_INSTALL_PATH = /usr/local/cuda
CUDA_SDK_PATH = /usr/local/cuda_sdk/C

### VTK path
VTK_INCLUDE_PATH = /usr/include/vtk-5.8
VTK_LIBRARY_PATH = /usr/lib/vtk-5.8

### choose CPU or GPU
DEVICE  = CPU
#DEVICE  = GPU

### choose Cartesian or spherical expansion
#EXPAND  = Cartesian
EXPAND  = Spherical

### GCC compiler
CXX	= mpicxx -ggdb3 -Wall -Wextra -Wshadow -Wuninitialized -O3 -ffast-math -fopenmp -funroll-loops -fforce-addr -fPIC -I../include

### Intel compiler
#CXX	= mpicxx -Wall -xHOST -O3 -openmp -funroll-loops -finline-functions -fPIC -ansi-alias -I../include

### BG/P compiler
#CXX	= mpixlcxx -qarch=450 -qtune=450 -I../include

### K computer
#CXX	= mpiFCCpx -Kopenmp,fast,ocl,preex,array_private -Ksimd=2,NOFLTLD,mfunc=3,optmsg=2 -Nsrc,sta -I../include -DNDEBUG
# -Kdalign,ns,mfunc,eval,prefetch_conditional,ilfunc -x-

### CUDA compiler
NVCC    = nvcc --compiler-bindir=/usr/bin/g++-4.4 -Xcompiler -fopenmp --ptxas-options=-v -O3\
	 -use_fast_math -arch=sm_21 -I../include -I$(CUDA_INSTALL_PATH)/include -I$(CUDA_SDK_PATH)/common/inc

### Base flags
LFLAGS  = -D$(DEVICE) -D$(EXPAND)

### PAPI flags
#LFLAGS += -DPAPI -lpapi

### QUARK flags
#LFLAGS	+= -DQUARK -lquark

### MassiveThreads flags
#LFLAGS += -std=c++0x -DMTHREADS -lmyth -lpthread -ldl

### VTK flags
#CXX     += -I$(VTK_INCLUDE_PATH)
#VFLAGS  = -L$(VTK_LIBRARY_PATH) -lvtkRendering -lvtkGraphics -lvtkFiltering -lvtkViews -lvtkCommon -lvtkWidgets -lvtkIO -DVTK

ifeq ($(DEVICE),GPU)
### CUDA flags
LFLAGS  += -DQUEUE -L$(CUDA_INSTALL_PATH)/lib64 -L$(CUDA_SDK_PATH)/lib -lcuda -lcudart -lcutil_x86_64 -lstdc++ -ldl -lm
endif

OBJECT = ../kernel/$(DEVICE)$(EXPAND)Laplace.o ../kernel/$(DEVICE)VanDerWaals.o\
	../kernel/CPUP2P.o

.cxx.o  :
	$(CXX) -c $? -o $@ $(LFLAGS)
.cu.o   :
	$(NVCC) -c $? -o $@ $(LFLAGS)

help:
	@make -C .. help
clean:
	@make -C .. clean
cleandat:
	@make -C .. cleandat
cleanlib:
	@make -C .. cleanlib
cleanall:
	@make -C .. cleanall
commit:
	@make -C .. commit
save:
	@make -C .. save
revert:
	@make -C .. revert
docs:
	@make -C .. docs
