.SUFFIXES: .cxx .cu .o
.PHONY: docs

CUDA_INSTALL_PATH = /usr/local/cuda
CUDA_SDK_PATH = /usr/local/cuda_sdk/C
VTK_INCLUDE_PATH = /usr/include/vtk-5.6

DEVICE  = cpu
#DEVICE  = gpu

#EXPAND  = Cartesian
EXPAND  = Spherical

ifeq ($(shell mpicxx --version | grep -c Intel ),0)
CXX     = mpicxx -ggdb3 -Wall -Wextra -Winit-self -Wshadow -O3 -fPIC -fopenmp\
	-ffast-math -funroll-loops -fforce-addr -rdynamic -D_FILE_OFFSET_BITS=64\
	-I../include
else
CXX     = mpicxx -O2 -fPIC -openmp -I../include
endif
NVCC    = nvcc -Xcompiler -fopenmp --ptxas-options=-v -O3 -use_fast_math -arch=sm_21\
	-I../include -I$(CUDA_INSTALL_PATH)/include -I$(CUDA_SDK_PATH)/common/inc
LFLAGS  = -D$(DEVICE) -D$(EXPAND) -L../lib
#LFLAGS	+= -DQUARK -lquark
ifeq ($(DEVICE),gpu)
LFLAGS  += -L$(CUDA_INSTALL_PATH)/lib64 -L$(CUDA_SDK_PATH)/lib -lcuda -lcudart -lcutil_x86_64 -lstdc++ -ldl -lm
endif
#CXX     += -I$(VTK_INCLUDE_PATH)
#VFLAGS  = -lvtkRendering -lvtkGraphics -lvtkFiltering -lvtkViews -lvtkCommon -lvtkWidgets -lvtkIO -DVTK
OBJECT  = ../kernel/$(DEVICE)$(EXPAND)Laplace.o ../kernel/$(DEVICE)VanDerWaals.o\
	../kernel/cpuP2P.o

.cxx.o  :
	$(CXX) -c $? -o $@ $(LFLAGS)
.cu.o   :
	$(NVCC) -c $? -o $@ $(LFLAGS)

help:
	@make -C .. help
cleanall:
	@make -C .. cleanall
commit:
	@make -C .. commit
save:
	@make -C .. save
revert:
	@make -C .. revert
docs:
	@make -C .. docs
