.SUFFIXES: .cxx .cu .o

### choose kernel
EQUATION = Laplace
#EQUATION = Yukawa (not available yet)
#EQUATION = Helmholtz (not available yet)
#EQUATION = Stokes (not available yet)

### choose basis of multipole/local expansion
BASIS	= Cartesian
#BASIS	= Spherical
#BASIS	= Planewave (not available yet)

### choose device to use
DEVICE	= CPU
#DEVICE	= GPU (not integrated)

### choose C++ compiler
CXX	= mpicxx -ggdb3 -Wall -Wextra -O3 -msse4a -ffast-math -funroll-loops -fopenmp # GCC
#CXX	= mpicxx -Wall -xHOST -O3 -funroll-loops -finline-functions -ansi-alias -openmp # Intel
#CXX	= icpc -Wall -mmic -O3 -L/opt/intel/tbb/lib/mic -lpthread # Intel MIC
#CXX	= mpic++ -Wall -mmic -O3 -L/opt/apps/intel/13/composer_xe_2013.2.146/tbb/lib/mic # Stampede
#CXX	= CC -ggdb3 -Wall -Wextra -O3 -mavx -ffast-math -funroll-loops -fopenmp # Cray
#CXX	= mpixlcxx_r -qarch=qp -qtune=qp -O3 -qhot -qsuppress=1500-036:1540-0198:1540-0541:1540-1103 # BG/Q
#CXX	= mpixlcxx_r -qarch=450d -qtune=450 -O3 -qsuppress=1500-036:1540-0198:1540-0541:1540-1103 # BG/P
#CXX	= mpiFCCpx -Kfast # K computer
#CXX	= tau_cxx.sh # TAU compiler instrumentation

### choose fortran compiler
FC = mpif90 -ggdb3 -O3 -msse4a -ffast-math -funroll-loops -cpp # gfortran
#FC = mpif90 -Wall -xHOST -O3 -funroll-loops -finline-functions -ansi-alias -cpp # Intel

### Base flags
CXX	+= -I../include
#CXX	+= -I$$(echo $$CPATH | sed 's/:/ -I/g') # BG compilers need this
#LFLAGS	+= -L$$(echo $$LIBRARY_PATH | sed 's/:/ -L/g') # BG compilers need this
LFLAGS	+= -D$(BASIS) # Specify basis of multipole/local expansion
LFLAGS  += -DEXPANSION=4 # Specify expansion order
LFLAGS	+= -DUSE_SIMD # Use SSE/AVX/MIC intrinsics
LFLAGS	+= -DFP64 # Use double precision
#LFLAGS	+= -DKAHAN # Use Kahan summation

### Debugging flags
LFLAGS	+= -DASSERT # Turns on asserttions (otherwise define an empty macro function)
#LFLAGS	+= -DCOUNT # Count number calls to P2P and M2L (slows down execution)

### Thread model flags
LFLAGS	+= -DTBB -ltbb # TBB is available from http://threadingbuildingblocks.org/download.php
#LFLAGS	+= -DMTHREAD -lmyth-native # MassiveThreads is available from http://code.google.com/p/massivethreads/
#LFLAGS	+= -DQTHREAD -lqthread # Qthread is available from https://code.google.com/p/qthreads/
#LFLAGS	+= -DOPENMP # OpenMP is included in most modern compilers

### DAG Recorder flags : DAG Recorder is part of MassiveThreads available from http://code.google.com/p/massivethreads/
#LFLAGS	+= -DDAG_RECORDER=2 -ldr

### PAPI flags : set environment value to (export EXAFMM_PAPI_EVENTS="PAPI_L2_DCM,PAPI_L2_DCA,PAPI_TLB_DM") or something else
#LFLAGS	+= -DPAPI -lpapi

### Trace flags : This tracing tool is part of ExaFMM
#LFLAGS	+= -DTRACE

### VTK flags : VTK is available from http://www.vtk.org/VTK/resources/software.html
#LFLAGS	+= -DVTK -lvtkCharts -lvtkRendering -lvtkGraphics -lvtkFiltering -lvtkViews -lvtkCommon -lvtkWidgets -lvtkIO

ifeq ($(DEVICE),GPU)
NVCC	= nvcc -use_fast_math -arch=sm_35 -I../include
### CUDA flags
LFLAGS  += -lcudadevrt
SOURCES	= ../kernels/$(EQUATION)$(BASIS)$(DEVICE).cu ../kernels/$(EQUATION)P2P$(DEVICE).cu
OBJECTS	= $(SOURCES:.cu=.o)
else
SOURCES	= ../kernels/$(EQUATION)$(BASIS)$(DEVICE).cxx ../kernels/$(EQUATION)P2P$(DEVICE).cxx
OBJECTS	= $(SOURCES:.cxx=.o)
endif

MAKEFLAGS += --no-print-directory

.cxx.o  :
	$(CXX) -c $^ -o $@ $(LFLAGS)
.cu.o   :
	$(NVCC) -c $^ -o $@ $(LFLAGS)

help:
	@make -C .. help
clean:
	@make -C .. clean
cleandat:
	@make -C .. cleandat
cleanlib:
	@make -C .. cleanlib
cleanall:
	@make -C .. cleanall
commit:
	@make -C .. commit
save:
	@make -C .. save
revert:
	@make -C .. revert
